#!/bin/bash

# MATCUTEST is the root directory of MatCUTEst, i.e., the directory where this script resides.
MATCUTEST="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

GITCU="git@github.com:equipez/matcutest_compiled.git"
TMPCU=/tmp/matcutest_compiled
TMPCS=/tmp/matcutest
README=$TMPCS/README.txt
CS7Z="$MATCUTEST"/matcutest.7z

rm -rf "$TMPCU" "$TMPCS" "$CS7Z"

mkdir -p "$TMPCS"

cat >$README << EOF
In the sequel, "the current directory" means the directory containing this README file.

Below are the steps to follow. In case of any problem, contact me (www.zhangzk.net).

See https://github.com/ralna/CUTEst for the original CUTEst package.

1. Start your MATLAB. In MATLAB, change your directory to the "mtools" folder in the current
   directory, and execute

   setup

   It should print "Done."

2. After the above step, any CUTEst problem can be obtained in MATLAB by

   macup(PROBLEM_NAME)

   where PROBLEM_NAME is the name of the problem (a character string). For example, try

   macup('AKIVA')

   This should give you a structure containing the full information of problem AKIVA, including its
   objective function, constraints (if any), starting point, etc.

   Try "help matcutest" in MATLAB or see mtools/README.txt for more information.
EOF

cp -r "$MATCUTEST"/mtools "$TMPCS"
rm "$TMPCS"/sifdir.m
rm "$TMPCS"/getcup.m
echo "1" > "$TMPCS"/mtools/GOTCUP

sed -i "s|setup has been done before. Remove the ''GOTCUP'' file in this directory if you want to redo it|Done|" "$TMPCS/mtools/setup.m"

rsync -av "$MATCUTEST"/cutest/ "$TMPCS"/cutest/  --exclude='*.f'

7z a -v90M "$CS7Z" "$TMPCS/"  # -v90M sets the maximal size of the 7z file to 90M, so that they can be uploaded to GitHub.

# printf "\nPushing to the git repo of matcutest_compiled ...\n"
# cd "$(dirname "$TMPCU")" && git clone "$GITCU" && cd "$TMPCU" && cp "$CS7Z"* "$TMPCU" || exit 2
# git add -A && git commit -m "add/update $(basename "$CS7Z")" && git push origin main || exit 3
# printf "\nDone.\n"

# rm -rf "$TMPCU" "$TMPCS" "$CS7Z"*
